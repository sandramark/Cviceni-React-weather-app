{"version":3,"sources":["components/Weather/index.jsx","utils.js","components/Forecast/index.jsx","assets/Loader.gif","cities.js","App.js","index.js"],"names":["Weather","weatherData","cityData","sunrise","sunset","className","main","temp","id","Math","round","weather","src","icon","alt","wind","speed","humidity","getTimefromUnix","unix","hours","Date","getHours","twoDigitMinutes","getMinutes","toString","padStart","getDatefromUnix","day","month","dayReceived","getDay","date","getDate","monthReceived","getMonth","Forecast","forecast","dt","cities","App","useState","setWeather","city","setCity","setForecast","useEffect","fetch","process","then","response","json","data","dataD","list","filter","_","index","name","onChange","event","target","value","map","item","sys","loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e809dd62.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst Weather = ({ weatherData, cityData, sunrise, sunset }) => {\r\n  return (\r\n    <div\r\n      className={`weather__current ${\r\n        weatherData?.main.temp < 10 ? \"weather__current--cold\" : \" \"\r\n      }`}\r\n    >\r\n      <h2 className=\"weather__city\" id=\"mesto\">\r\n        {cityData}, Country\r\n      </h2>\r\n      <div className=\"weather__inner weather__inner--center\">\r\n        <div className=\"weather__section weather__section--temp\">\r\n          <span className=\"weather__temp-value\" id=\"teplota\">\r\n            {Math.round(weatherData?.main?.temp)}\r\n          </span>\r\n          <span className=\"weather__temp-unit\">Â°C</span>\r\n          <div className=\"weather__description\" id=\"popis\">\r\n            {weatherData?.weather[0].main}\r\n          </div>\r\n        </div>\r\n        <div className=\"weather__section weather__section--icon\" id=\"ikona\">\r\n          <img\r\n            src={`http://openweathermap.org/img/wn/${weatherData?.weather[0].icon}@2x.png`}\r\n            alt=\"current weather icon\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"weather__inner\">\r\n        <div className=\"weather__section\">\r\n          <h3 className=\"weather__title\">Wind</h3>\r\n          <div className=\"weather__value\">\r\n            <span id=\"wind\">{weatherData?.wind.speed}</span> km/h\r\n          </div>\r\n        </div>\r\n        <div className=\"weather__section\">\r\n          <h3 className=\"weather__title\">Humidity</h3>\r\n          <div className=\"weather__value\">\r\n            <span id=\"humidity\">{weatherData?.main.humidity}</span> %\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"weather__inner\">\r\n        <div className=\"weather__section\">\r\n          <h3 className=\"weather__title\">Sunrise</h3>\r\n          <div className=\"weather__value\">\r\n            <span id=\"sunrise\">{sunrise}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"weather__section\">\r\n          <h3 className=\"weather__title\">Sunset</h3>\r\n          <div className=\"weather__value\">\r\n            <span id=\"sunset\">{sunset}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","export const getTimefromUnix = (unix) => {\r\n  const hours = new Date(unix * 1000).getHours();\r\n  const minutes = new Date(unix * 1000).getMinutes();\r\n  const twoDigitMinutes = minutes.toString().padStart(2, \"0\");\r\n  return `${hours}:${twoDigitMinutes}`;\r\n};\r\n\r\nexport const getDatefromUnix = (unix) => {\r\n  const dayReceived = new Date(unix * 1000).getDay();\r\n  const date = new Date(unix * 1000).getDate();\r\n  const monthReceived = new Date(unix * 1000).getMonth();\r\n\r\n  let day;\r\n  let month;\r\n  // eslint-disable-next-line default-case\r\n  switch (dayReceived) {\r\n    case 0:\r\n      day = \"Sunday\";\r\n      break;\r\n    case 1:\r\n      day = \"Monday\";\r\n      break;\r\n    case 2:\r\n      day = \"Tuesday\";\r\n      break;\r\n    case 3:\r\n      day = \"Wednesday\";\r\n      break;\r\n    case 4:\r\n      day = \"Thursday\";\r\n      break;\r\n    case 5:\r\n      day = \"Friday\";\r\n      break;\r\n    case 6:\r\n      day = \"Saturday\";\r\n  }\r\n\r\n  // eslint-disable-next-line default-case\r\n  switch (monthReceived) {\r\n    case 0:\r\n      month = \"Jan\";\r\n      break;\r\n    case 1:\r\n      month = \"Feb\";\r\n      break;\r\n    case 2:\r\n      month = \"Mar\";\r\n      break;\r\n    case 3:\r\n      month = \"Apr\";\r\n      break;\r\n    case 4:\r\n      month = \"May\";\r\n      break;\r\n    case 5:\r\n      month = \"Jun\";\r\n      break;\r\n    case 6:\r\n      month = \"Jul\";\r\n      break;\r\n    case 7:\r\n      month = \"Aug\";\r\n      break;\r\n    case 8:\r\n      month = \"Sep\";\r\n      break;\r\n    case 9:\r\n      month = \"Oct\";\r\n      break;\r\n    case 10:\r\n      month = \"Nov\";\r\n      break;\r\n    case 11:\r\n      month = \"Dec\";\r\n      break;\r\n  }\r\n\r\n  return `${day}, ${date} ${month}`;\r\n};\r\n\r\nexport default getTimefromUnix;\r\n\r\n//   const getDatefromUnix = (unix) => {\r\n//     const dayReceived = new Date(unix * 1000).getDay();\r\n//     const date = new Date(unix * 1000).getDate();\r\n//     const monthReceived = new Date(unix * 1000).getMonth();\r\n\r\n//     let day;\r\n//     let month;\r\n//     // eslint-disable-next-line default-case\r\n//     switch (dayReceived) {\r\n//       case 0:\r\n//         day = \"Sunday\";\r\n//         break;\r\n//       case 1:\r\n//         day = \"Monday\";\r\n//         break;\r\n//       case 2:\r\n//         day = \"Tuesday\";\r\n//         break;\r\n//       case 3:\r\n//         day = \"Wednesday\";\r\n//         break;\r\n//       case 4:\r\n//         day = \"Thursday\";\r\n//         break;\r\n//       case 5:\r\n//         day = \"Friday\";\r\n//         break;\r\n//       case 6:\r\n//         day = \"Saturday\";\r\n//     }\r\n\r\n//     // eslint-disable-next-line default-case\r\n//     switch (monthReceived) {\r\n//       case 0:\r\n//         month = \"Jan\";\r\n//         break;\r\n//       case 1:\r\n//         month = \"Feb\";\r\n//         break;\r\n//       case 2:\r\n//         month = \"Mar\";\r\n//         break;\r\n//       case 3:\r\n//         month = \"Apr\";\r\n//         break;\r\n//       case 4:\r\n//         month = \"May\";\r\n//         break;\r\n//       case 5:\r\n//         month = \"Jun\";\r\n//         break;\r\n//       case 6:\r\n//         month = \"Jul\";\r\n//       case 7:\r\n//         month = \"Aug\";\r\n//         break;\r\n//       case 8:\r\n//         month = \"Sep\";\r\n//         break;\r\n//       case 9:\r\n//         month = \"Oct\";\r\n//         break;\r\n//       case 10:\r\n//         month = \"Nov\";\r\n//         break;\r\n//       case 11:\r\n//         month = \"Dec\";\r\n//         break;\r\n//     }\r\n\r\n//     return `${day}, ${date} ${month}`;\r\n//   };\r\n","import React from \"react\";\r\nimport { getDatefromUnix } from \"../../utils\";\r\nimport \"../../App.css\";\r\n\r\nconst Forecast = ({ forecast }) => {\r\n  return (\r\n    <div className=\"forecast\">\r\n      <div className=\"forecast__day\"> {getDatefromUnix(forecast?.dt)} </div>{\" \"}\r\n      <div className=\"forecast__icon\">\r\n        {\" \"}\r\n        <img\r\n          src={`http://openweathermap.org/img/wn/${forecast?.weather[0].icon}@2x.png`}\r\n          alt=\"current weather icon\"\r\n        />{\" \"}\r\n      </div>{\" \"}\r\n      <div className=\"forecast__temp\">\r\n        {\" \"}\r\n        {Math.round(forecast?.main?.temp)}Â°C{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","export default __webpack_public_path__ + \"static/media/Loader.25c85eed.gif\";","export const cities = [\r\n  \"Abuja\",\r\n  \"Amsterdam\",\r\n  \"AswÄn\",\r\n  \"Athens\",\r\n  \"Bangkok\",\r\n  \"Barcelona\",\r\n  \"Belgrade\",\r\n  \"Brno\",\r\n  \"Budapest\",\r\n  \"Buenos Aires\",\r\n  \"Cape Town\",\r\n  \"Dakar\",\r\n  \"El Alto\",\r\n  \"Hanoi\",\r\n  \"Harbin\",\r\n  \"Kingston\",\r\n  \"Kuala Lumpur\",\r\n  \"Kuwait\",\r\n  \"Kyiv\",\r\n  \"Lagos\",\r\n  \"Ljubljana\",\r\n  \"London\",\r\n  \"Madrid\",\r\n  \"Melbourne\",\r\n  \"Miami\",\r\n  \"Minsk\",\r\n  \"Moscow\",\r\n  \"New Delhi\",\r\n  \"New York\",\r\n  \"Norilsk\",\r\n  \"Paris\",\r\n  \"Porto\",\r\n  \"Prague\",\r\n  \"Reykjavik\",\r\n  \"Seoul\",\r\n  \"Skopje\",\r\n  \"Sofia\",\r\n  \"Split\",\r\n  \"Sydney\",\r\n  \"SÃ£o Paulo\",\r\n  \"Tallinn\",\r\n  \"Tenerife\",\r\n  \"Tirana\",\r\n  \"Toronto\",\r\n  \"Vancouver\",\r\n  \"Vienna\",\r\n  \"Vilnius\",\r\n  \"Warsaw\",\r\n  \"Winnipeg\",\r\n  \"Yakutsk\",\r\n];\r\n\r\nexport default cities;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Weather from \"./components/Weather\";\r\nimport Forecast from \"./components/Forecast\";\r\nimport loader from \"./assets/Loader.gif\";\r\nimport { getTimefromUnix } from \"./utils\";\r\nimport cities from \"./cities\";\r\n\r\nconst App = () => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [city, setCity] = useState(\"London\");\r\n  const [forecast, setForecast] = useState(null);\r\n\r\n  const fetchWeather = () => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${process.env.REACT_APP_MY_API_ID}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setWeather(data);\r\n      });\r\n  };\r\n\r\n  const fetchForecast = () => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${process.env.REACT_APP_MY_API_ID}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((dataD) => {\r\n        setForecast(dataD.list.filter((_, index) => index % 8 === 0));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchWeather();\r\n    fetchForecast();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [city]);\r\n\r\n  // const handleClick = (event) => {\r\n  //   setCity(event.target.innerText);\r\n\r\n  // };\r\n\r\n  const handleChange = (event) => {\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <h1>My Weather App </h1>{\" \"}\r\n        <form className=\"select-wrapper\">\r\n          <select\r\n            className=\"select\"\r\n            name=\"cityselect\"\r\n            id=\"cityselect\"\r\n            onChange={handleChange}\r\n          >\r\n            {cities.map((item) => {\r\n              return (\r\n                <option key={item} value={item}>\r\n                  {item}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </form>\r\n        <div className=\"weather\">\r\n          {/* <div className=\"button-group\">\r\n            <button className=\"button\" onClick={handleClick}>\r\n              Prague{\" \"}\r\n            </button>{\" \"}\r\n            <button className=\"button\" onClick={handleClick}>\r\n              Reykjavik{\" \"}\r\n            </button>{\" \"}\r\n            <button className=\"button\" onClick={handleClick}>\r\n              Tenerife{\" \"}\r\n            </button>{\" \"}\r\n          </div> */}\r\n\r\n          {weather ? (\r\n            <Weather\r\n              weatherData={weather}\r\n              cityData={city}\r\n              sunrise={getTimefromUnix(weather?.sys?.sunrise)}\r\n              sunset={getTimefromUnix(weather?.sys?.sunset)}\r\n            />\r\n          ) : (\r\n            <img src={loader} alt=\"loader\" />\r\n          )}\r\n\r\n          <div className=\"weather__forecast\" id=\"predpoved\">\r\n            {forecast ? (\r\n              // eslint-disable-next-line no-undef\r\n              forecast.map((item) => <Forecast forecast={item} key={item.dt} />)\r\n            ) : (\r\n              <img src={loader} alt=\"loader\" />\r\n            )}\r\n          </div>\r\n        </div>{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}